{"version":3,"sources":["Btn.js","App.js","serviceWorker.js","index.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","greenIcon","iconSize","iconAnchor","popupAnchor","shadowSize","gradient","0.1","0.2","0.4","0.6","0.8","1","Task","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFileChosen","file","fr","FileReader","onloadend","result","Papa","parse","header","skipEmptyLines","setState","jsondata","data","columns","meta","fields","map","x","Header","accessor","readAsText","handleSourceHeatMap","console","log","state","sourceLayerHidden","length","center","inter","filter","from_lat","from_long","_","countBy","keys","parseFloat","split","reduce","total","arguments","undefined","value","sourceAddressPoints","destLayerHidden","M","toast","html","handleDestHeatMap","to_lat","to_long","destAddressPoints","from","to","selected","showFromMarker","showToMarker","AutoInit","_this2","react_default","a","createElement","style","display","flexDirection","alignItems","height","action","width","className","type","onChange","e","target","files","justifyContent","onClick","Map","zoom","HeatmapLayer_default","fitBoundsOnLoad","fitBoundsOnUpdate","points","longitudeExtractor","m","latitudeExtractor","intensityExtractor","TileLayer","url","attribution","Marker","position","Popup","icon","es","getTrProps","rowInfo","row","original","index","background","color","filterable","defaultFilterMethod","String","id","Component","App","Btn","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b659343.chunk.js","sourcesContent":["import React, {Component} from 'react';\n//import { CsvToHtmlTable } from 'react-csv-to-table';\nimport M from 'materialize-css';\nimport 'react-table/react-table.css'\nimport Papa from 'papaparse/papaparse.min.js';\nimport ReactTable from 'react-table'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\nimport { AntPath, antPath } from 'leaflet-ant-path';\nimport _ from 'lodash';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst greenIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n//const options = { use: L.polyline, delay: 400, dashArray: [10,20], weight: 5, color: \"#0000FF\", pulseColor: \"#FFFFFF\" };\n//const addressPoints = [[12.9, 77.6, 300],[13, 77, 10]];\nconst gradient = {\n  0.1: '#89BDE0', 0.2: '#96E3E6', 0.4: '#82CEB6',\n  0.6: '#FAF3A5', 0.8: '#F5D98B', 1.0: '#DE9A96'\n};\n\n// ref can only be used on class components\nclass Task extends Component {\n  // get a reference to the element after the component has mounted\n  constructor(){\n    super();\n    this.state = {\n      jsondata: [],\n      columns: [],\n      sourceAddressPoints: [],\n      destAddressPoints: [],\n      center: null,\n      from: [0,0],\n      to: [0,0],\n      selected: null,\n      sourceLayerHidden: true,\n      destLayerHidden: true,\n      showFromMarker: false,\n      showToMarker: false\n    };\n  };\n\n  componentDidMount(){\n    M.AutoInit();\n  }\n\n  handleFileChosen = (file) => {\n  \tlet fr = new FileReader();\n  \tfr.onloadend = () => {\n  \t\tlet result = Papa.parse(fr.result, {\n     \t\theader: true,\n     \t\tskipEmptyLines: true,\n    \t}); \n  \t\tthis.setState({\n  \t\t\tjsondata: result.data, \n  \t\t\tcolumns: result.meta.fields.map(x => ({Header : x, accessor: x}))\n  \t\t});\n  \t}\n  \tfr.readAsText(file);\n  }\n\n  handleSourceHeatMap = () => {\n  \tconsole.log(\"heat\")\n  \tif(this.state.sourceLayerHidden==false){\n  \t\tthis.setState({sourceLayerHidden: true})\n  \t}\n  \telse if(this.state.jsondata.length>0){\n  \t\tconsole.log(this.state.jsondata)\n  \t\tlet inter = this.state.jsondata.filter(x => x.from_lat!=\"NULL\"&&x.from_long!=\"NULL\")\n\t  \tlet center\n\t  \tinter = inter.map(x => [x.from_lat,x.from_long])\n\t  \tinter = _.countBy(inter)\n\t  \tinter = Object.keys(inter).map(x => [parseFloat(x.split(\",\")[0]), parseFloat(x.split(\",\")[1]), parseFloat(inter[x])])\n\t  \tcenter =  inter.reduce((total=[0,0], value) => [total[0]+value[0], total[1]+value[1]])\n\t  \tcenter = center.map(x => x/inter.length)\t\n\t  \tconsole.log(center)\n\t  \tthis.setState({center: center}, () => { \n\t  \t\tthis.setState({sourceAddressPoints: inter, \n\t  \t\t\tsourceLayerHidden: false, \n\t  \t\t\tdestLayerHidden: true\n\t  \t\t}, ()=>{ console.log(inter)})\n  \t\t})\n  \t}\n  \telse{\n  \t\tM.toast({html: 'Please Select CSV first.'})\n  \t}\n  }\n\n  handleDestHeatMap = () => {\n  \tconsole.log(\"heat\")\n  \tif(this.state.destLayerHidden==false){\n  \t\tthis.setState({destLayerHidden: true})\n  \t}\n  \telse if(this.state.jsondata.length>0){\n  \t\tconsole.log(this.state.jsondata)\n  \t\tlet inter = this.state.jsondata.filter(x => x.to_lat!=\"NULL\"&&x.to_long!=\"NULL\")\n  \t\tlet center\n\t  \tinter = inter.map(x => [x.to_lat,x.to_long])\n\t  \tinter = _.countBy(inter)\n\t  \tinter = Object.keys(inter).map(x => [parseFloat(x.split(\",\")[0]), parseFloat(x.split(\",\")[1]), parseFloat(inter[x])])\n\t  \tcenter =  inter.reduce((total=[0,0], value) => [total[0]+value[0], total[1]+value[1]])\n\t  \tcenter = center.map(x => x/inter.length)\t\n\t  \tconsole.log(center)\n\t  \tthis.setState({center: center}, () => { \n\t  \t\tthis.setState({destAddressPoints: inter, \n\t  \t\t\tdestLayerHidden: false, \n\t  \t\t\tsourceLayerHidden: true\n\t  \t\t}, ()=>{ console.log(inter)})\n  \t\t})\n  \t}\n  \telse{\n  \t\tM.toast({html: 'Please Select CSV first.'})\n  \t}\n  }\n\n  render(){\n    return (\n    \t<div>\n    \t\t<div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', height: '8vh'}}>\n\t\t      <form action=\"#\" style={{width: '50%'}}>\n\t\t        <div className=\"file-field input-field\">\n\t\t          <div className=\"btn black\">\n\t\t            <span>CSV File</span>\n\t\t            <input \n\t\t            \ttype=\"file\" \n\t\t            \tonChange={ (e) => this.handleFileChosen(e.target.files[0]) }/>\n\t\t          </div>\n\t\t          <div className=\"file-path-wrapper\">\n\t\t            <input className=\"file-path validate\" type=\"text\"/>\n\t\t          </div>\n\t\t        </div>\n\t\t      </form>\n\t\t      <div style={{width: '50%', display: 'flex', justifyContent: 'space-around'}}>\n\t\t      \t<div className=\"btn black\" onClick={this.handleSourceHeatMap}><a className=\"white-text\">Source Heatmap : Turn {this.state.sourceLayerHidden&&\"ON\"}{!this.state.sourceLayerHidden&&\"OFF\"}</a></div>\n\t\t      \t<div className=\"btn black\" onClick={this.handleDestHeatMap}><a className=\"white-text\">Destination Heatmap : Turn {this.state.destLayerHidden&&\"ON\"}{!this.state.destLayerHidden&&\"OFF\"}</a></div>\n\t\t      </div>\n\t\t      \t\n\t\t    </div>\n\t      <div style={{display: 'flex', flexDirection: 'row', height: '92vh'}}>\n\t      \t<Map style = {{width: '50%', height: '92vh'}} center={this.state.center} zoom={12}>\n\t      \t\t{!this.state.sourceLayerHidden &&\n\t      \t\t\t<HeatmapLayer\n\t\t            fitBoundsOnLoad\n\t              fitBoundsOnUpdate\n\t              points={this.state.sourceAddressPoints}\n\t              longitudeExtractor={m => m[1]}\n\t              latitudeExtractor={m => m[0]}\n\t              intensityExtractor={m => m[2]}\n\t              gradient={gradient} />\n\t          }\n\t          {!this.state.destLayerHidden &&\n\t      \t\t\t<HeatmapLayer\n\t\t            fitBoundsOnLoad\n\t              fitBoundsOnUpdate\n\t              points={this.state.destAddressPoints}\n\t              longitudeExtractor={m => m[1]}\n\t              latitudeExtractor={m => m[0]}\n\t              intensityExtractor={m => m[2]}\n\t              gradient={gradient} />\n\t          }\n      \t    <TileLayer \n      \t    \turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      \t    \tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      \t    />\n      \t    {this.state.showFromMarker &&\n      \t    \t<Marker position={this.state.from}>\n\t      \t      <Popup>FROM</Popup>\n\t      \t    </Marker>\n\t      \t  }\n      \t    {this.state.showToMarker &&\n      \t    \t<Marker position={this.state.to} icon={greenIcon}>\n\t      \t      <Popup>TO</Popup>\n\t      \t    </Marker>\n\t      \t  }\n      \t  </Map>\n      \t   \n\t\t      <ReactTable \n\t\t      \tstyle = {{width: '50%', height: '92vh'}}\n\t\t      \tgetTrProps={(state, rowInfo) => {\n\t\t      \t\tif(rowInfo && \n\t\t      \t\trowInfo.row && \n\t\t      \t\trowInfo.original.from_lat!==\"NULL\" &&\n\t\t\t     \t\trowInfo.original.from_long!==\"NULL\" &&\n\t\t\t   \t\t\trowInfo.original.to_lat!==\"NULL\" &&\n\t\t\t   \t\t\trowInfo.original.to_long!==\"NULL\"){\n\t\t  \t   \t\t\treturn {\n\t\t\t      \t\t\tonClick: (e) => {\n\t\t\t      \t\t\t\tconsole.log('row : ', rowInfo);\t\t\t      \t\t\t\t\n\t\t\t\t\t     \t\t\tthis.setState({ \n\t\t\t\t\t   \t\t\t\t\tselected: rowInfo.index,\n\t\t\t\t\t   \t\t\t\t\tfrom: [parseFloat(rowInfo.original.from_lat), parseFloat(rowInfo.original.from_long)],\n\t\t\t\t\t   \t\t\t\t\tto: [parseFloat(rowInfo.original.to_lat), parseFloat(rowInfo.original.to_long)],\n\t\t\t\t\t   \t\t\t\t\tcenter: [(parseFloat(rowInfo.original.from_lat)+parseFloat(rowInfo.original.to_lat))/2, (parseFloat(rowInfo.original.from_long)+parseFloat(rowInfo.original.to_long))/2],\n\t\t\t\t\t   \t\t\t\t\tshowFromMarker: true,\n\t\t\t\t\t   \t\t\t\t\tshowToMarker: true\n\t\t\t\t     \t\t\t\t});\n\t\t\t      \t\t\t},\n\t\t\t      \t\t\tstyle: {\n\t\t\t      \t\t\t\tbackground: rowInfo.index === this.state.selected ? 'black' : 'white',\n\t\t\t      \t\t\t\tcolor : rowInfo.index === this.state.selected ? 'white' : 'black'\n\t\t\t      \t\t\t}\n\t\t\t      \t\t}\n\t\t      \t\t}\n\t\t      \t\telse{\n\t\t      \t\t\treturn {\n\t\t      \t\t\t\tonClick: (e) => {\n\t\t\t      \t\t\t\tconsole.log('row : ', rowInfo);\t\t\t      \t\t\t\t\n\t\t\t\t\t     \t\t\tthis.setState({ \n\t\t\t\t\t   \t\t\t\t\tselected: rowInfo.index,\n\t\t\t\t\t   \t\t\t\t\tshowFromMarker: false,\n\t\t\t\t\t   \t\t\t\t\tshowToMarker: false\n\t\t\t\t     \t\t\t\t});\n\t\t\t\t     \t\t\t\tM.toast({html: 'Source/ Destination contains null value.'})\n\t\t\t      \t\t\t}\n\t\t      \t\t\t}\n\t\t      \t\t}\n\t\t      \t}}\n\t\t      \tdata={this.state.jsondata} \n\t\t      \tcolumns={this.state.columns}\n\t\t      \tfilterable\n\t\t      \tdefaultFilterMethod={(filter, row) =>\n\t\t      \t  String(row[filter.id]) === filter.value}/>\n\t\t      </div>\n      </div>\n    )\n  }\n}\n\nexport default Task;\n","//right on top\nimport React, {Component} from 'react';\nimport Task from './Btn.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <Task />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}